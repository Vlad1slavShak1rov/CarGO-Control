// <auto-generated />
using System;
using CarGO_Control.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarGO_Control.Migrations
{
    [DbContext(typeof(CarGoDBContext))]
    [Migration("20241113123332_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CarGO_Control.DataBase.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDTransportation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IDTransportation")
                        .IsUnique();

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Operator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleID")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Route", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CityTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataOut")
                        .HasColumnType("TEXT");

                    b.Property<string>("RouteHTTP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrackNumer")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TrackNumer")
                        .IsUnique();

                    b.ToTable("Route");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Transportation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Transportations");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Driver", b =>
                {
                    b.HasOne("CarGO_Control.DataBase.Transportation", "Transportation")
                        .WithOne("Driver")
                        .HasForeignKey("CarGO_Control.DataBase.Driver", "IDTransportation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarGO_Control.DataBase.Users", "User")
                        .WithOne("Driver")
                        .HasForeignKey("CarGO_Control.DataBase.Driver", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transportation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Operator", b =>
                {
                    b.HasOne("CarGO_Control.DataBase.Users", "User")
                        .WithOne("Operator")
                        .HasForeignKey("CarGO_Control.DataBase.Operator", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Roles", b =>
                {
                    b.HasOne("CarGO_Control.DataBase.Users", "Users")
                        .WithOne("Roles")
                        .HasForeignKey("CarGO_Control.DataBase.Roles", "RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Route", b =>
                {
                    b.HasOne("CarGO_Control.DataBase.Transportation", "Transport")
                        .WithOne("Route")
                        .HasForeignKey("CarGO_Control.DataBase.Route", "TrackNumer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Transportation", b =>
                {
                    b.Navigation("Driver")
                        .IsRequired();

                    b.Navigation("Route")
                        .IsRequired();
                });

            modelBuilder.Entity("CarGO_Control.DataBase.Users", b =>
                {
                    b.Navigation("Driver")
                        .IsRequired();

                    b.Navigation("Operator")
                        .IsRequired();

                    b.Navigation("Roles")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
